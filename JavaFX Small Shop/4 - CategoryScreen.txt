package com.example.demo18.screens;

import com.example.demo18.models.Category;
import com.example.demo18.utils.DatabaseConnector;
import javafx.application.Application;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.scene.Scene;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

public class CategoryScreen extends Application {

    private TableView<Category> tableView = new TableView<>();

    public static void main(String[] args) {
        launch(args);
    }

    @Override
    public void start(Stage primaryStage) {
        primaryStage.setTitle("JavaFX MySQL Example");

        TableColumn<Category, Integer> idColumn = new TableColumn<>("ID");
        idColumn.setCellValueFactory(new PropertyValueFactory<>("id"));

        TableColumn<Category, String> nameColumn = new TableColumn<>("Name");
        nameColumn.setCellValueFactory(new PropertyValueFactory<>("name"));

        TableColumn<Category, LocalDateTime> createdAtColumn = new TableColumn<>("Created At");
        createdAtColumn.setCellValueFactory(new PropertyValueFactory<>("createdAt"));

        TableColumn<Category, LocalDateTime> updatedAtColumn = new TableColumn<>("Updated At");
        updatedAtColumn.setCellValueFactory(new PropertyValueFactory<>("updatedAt"));

        tableView.getColumns().addAll(idColumn, nameColumn, createdAtColumn, updatedAtColumn);

        VBox vbox = new VBox(tableView);
        Scene scene = new Scene(vbox);

        primaryStage.setScene(scene);
        primaryStage.show();

        loadData();
    }

    private void loadData() {
        ObservableList<Category> data = FXCollections.observableArrayList();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");

        try (Connection connection = DatabaseConnector.getConnection();
             Statement statement = connection.createStatement();
             ResultSet resultSet = statement.executeQuery("SELECT * FROM categories")) {

            while (resultSet.next()) {
                data.add(new Category(
                        resultSet.getInt("id"),
                        resultSet.getString("name"),
                        LocalDateTime.parse(resultSet.getString("created_at"), formatter),
                        LocalDateTime.parse(resultSet.getString("updated_at"), formatter)
                ));
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }

        tableView.setItems(data);
    }
}
